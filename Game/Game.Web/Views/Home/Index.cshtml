@{
    ViewData["Title"] = "Home Page";
}

<div>
    <h2>Join Game</h2>

    Character Name: <input type="text" id="nameInput"/>
    <input type="button" id="joinButton" value="Join Game" />
</div>

<div>
    <h2>todo player name</h2>

    <h3>Health</h3>
    <p>todo Player Health</p>

    <h3>Dead</h3>
</div>

<div>
    <h2>Other Players</h2>
    <ul>
        <li>Todo List all other players</li>
    </ul>
</div>

<div class="container">
    <div class="row p-1">
        <div class="col-1">User</div>
        <div class="col-5"><input type="text" id="userInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-1">Message</div>
        <div class="col-5"><input type="text" class="w-100" id="messageInput" /></div>
    </div>
    <div class="row p-1">
        <div class="col-6 text-end">
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <hr />
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/gameHub.js"></script>
    <script>
        var connection = new signalR.HubConnectionBuilder().withUrl("/gameHub").build();
        //Disable the send button until connection is established.
        document.getElementById("sendButton").disabled = true;


        connection.on("ReceiveMessage", function (user, message) {
            console.log(message);
            var li = document.createElement("li");
            document.getElementById("messagesList").appendChild(li);
            // We can assign user-supplied strings to an element's textContent because it
            // is not interpreted as markup. If you're assigning in any other way, you
            // should be aware of possible script injection concerns.
            li.textContent = `${user} says ${message}`;
        });

        connection.on("PlayerJoined", function (playerName, health) {
            console.log(playerName);
            console.log(health);
        });

        connection.on("UpdatePlayerHealth", function (playerName, health) {
            console.log(playerName);
            console.log(health);
        });

        connection.start().then(function () {
            console.log('connection started...');
            document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {
            var user = document.getElementById("userInput").value;
            var message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", user, message).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        });

        document.getElementById("joinButton").addEventListener("click", function (event) {
            var playerName = document.getElementById("nameInput").value;
            connection.invoke("JoinGame", playerName).catch(function (err) {
                return console.error(err.toString());
            });
            event.preventDefault();
        });
    </script>
}